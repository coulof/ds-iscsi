From 9aee3e5a52b7037a9f2df55344524f08ba8ac4e6 Mon Sep 17 00:00:00 2001
From: Your Name <you@example.com>
Date: Wed, 22 Jul 2020 08:35:53 +0000
Subject: [PATCH 1/1] GKE 1.4.1 compatible installer

---
 helm/common.bash                              |  3 --
 helm/csi-powermax/templates/controller.yaml   | 30 --------------
 helm/csi-powermax/templates/ds-iscsi.yaml     | 39 +++++++++++++++++++
 .../templates/volumesnapshotclass.yaml        |  9 -----
 helm/install.powermax                         |  8 ----
 5 files changed, 39 insertions(+), 50 deletions(-)
 create mode 100644 helm/csi-powermax/templates/ds-iscsi.yaml
 delete mode 100644 helm/csi-powermax/templates/volumesnapshotclass.yaml

diff --git a/helm/common.bash b/helm/common.bash
index 1fadd9c..6c02652 100644
--- a/helm/common.bash
+++ b/helm/common.bash
@@ -4,9 +4,6 @@
 kubectl --help >&/dev/null || {
 	 echo "kubectl required for installation... exiting"; exit 2 
 }
-kubeadm --help >&/dev/null || {
-	echo "kubeadm required for installation... exiting"; exit 2
-}
 
 waitOnRunning() {
   TARGET=$(kubectl get pods -n ${NS} | grep "powermax" | wc -l)
diff --git a/helm/csi-powermax/templates/controller.yaml b/helm/csi-powermax/templates/controller.yaml
index 78a34af..5445eed 100644
--- a/helm/csi-powermax/templates/controller.yaml
+++ b/helm/csi-powermax/templates/controller.yaml
@@ -37,22 +37,6 @@ rules:
   - apiGroups: ["csi.storage.k8s.io"]
     resources: ["csinodeinfos"]
     verbs: ["get", "list", "watch"]
-# below for snapshotter
-  - apiGroups: [""]
-    resources: ["secrets"]
-    verbs: ["get", "list"]
-  - apiGroups: ["snapshot.storage.k8s.io"]
-    resources: ["volumesnapshotcontents"]
-    verbs: ["get", "list", "watch", "update", "create", "delete"]
-  - apiGroups: ["snapshot.storage.k8s.io"]
-    resources: ["volumesnapshotclasses"]
-    verbs: ["get", "list", "watch"]
-  - apiGroups: ["snapshot.storage.k8s.io"]
-    resources: ["volumesnapshots", "volumesnapshots/status"]
-    verbs: ["get", "list", "watch", "update"]
-  - apiGroups: ["apiextensions.k8s.io"]
-    resources: ["customresourcedefinitions"]
-    verbs: ["create", "list", "watch", "delete"]
 ---
 kind: ClusterRoleBinding
 apiVersion: rbac.authorization.k8s.io/v1
@@ -138,20 +122,6 @@ spec:
           volumeMounts:
             - name: socket-dir
               mountPath: /var/run/csi
-        - name: snapshotter
-          image: {{ required "Must provide the CSI snapshotter container image." .Values.images.snapshotter }}
-          args:
-            - "--csi-address=$(ADDRESS)"
-            - "--v=5"
-            - "--snapshot-name-prefix={{ required "Must privided a Snapshot Name Prefix" .Values.snapNamePrefix }}"
-            - "--snapshot-name-uuid-length=10"
-            - "--timeout=600s"
-          env:
-            - name: ADDRESS
-              value: /var/run/csi/csi.sock
-          volumeMounts:
-            - name: socket-dir
-              mountPath: /var/run/csi
         - name: driver
           image: {{ required "Must provide the PowerMax driver container image." .Values.images.driver }}
           imagePullPolicy: Always
diff --git a/helm/csi-powermax/templates/ds-iscsi.yaml b/helm/csi-powermax/templates/ds-iscsi.yaml
new file mode 100644
index 0000000..f0cb61d
--- /dev/null
+++ b/helm/csi-powermax/templates/ds-iscsi.yaml
@@ -0,0 +1,39 @@
+apiVersion: apps/v1
+kind: DaemonSet
+metadata:
+  name: start-iscsid
+  namespace: kube-system
+  annotations:
+    kubernetes.io/description: 'DaemonSet that starts iscsid on every nodes.'
+spec:
+  selector:
+    matchLabels:
+      name: start-iscsid
+  template:
+    metadata:
+      labels:
+        name: start-iscsid
+    spec:
+      hostNetwork: true
+      hostPID: true
+      volumes:
+      - hostPath:
+          path: /
+        name: host
+      initContainers:
+      - name: iscid-start
+        image: ubuntu
+        command: ["chroot", "/host", "systemctl", "start", "iscsid"]
+        securityContext:
+          privileged: true
+        volumeMounts:
+        - name: host
+          mountPath: /host
+        resources:
+          requests:
+            memory: "10Mi"
+            cpu: "10m"
+      containers:
+      - name: pause
+        image: gcr.io/google_containers/pause
+        imagePullPolicy: IfNotPresent
diff --git a/helm/csi-powermax/templates/volumesnapshotclass.yaml b/helm/csi-powermax/templates/volumesnapshotclass.yaml
deleted file mode 100644
index 145ab6e..0000000
--- a/helm/csi-powermax/templates/volumesnapshotclass.yaml
+++ /dev/null
@@ -1,9 +0,0 @@
-apiVersion: snapshot.storage.k8s.io/v1alpha1
-kind: VolumeSnapshotClass
-metadata:
-  name: {{ required "Must provide a storage class name." .Values.snapshotClass.name}}
-{{- if eq .Values.customDriverName.enabled true}}
-snapshotter: {{ printf "%s.%s.dellemc.com" .Release.Namespace .Values.customDriverName.value }}
-{{- else }}
-snapshotter: csi-powermax.dellemc.com
-{{- end }}
diff --git a/helm/install.powermax b/helm/install.powermax
index 6f1e0b0..04117ce 100644
--- a/helm/install.powermax
+++ b/helm/install.powermax
@@ -38,12 +38,6 @@ if [ $? -ne 0 ];
     then echo "*** Couldn't find powermax-certs. Create powermax-certs if you want to validate unisphere certificates ***"
 fi
 
-kubectl get customresourcedefinitions | grep volumesnapshotclasses --quiet
-if [ $? -ne 0 ]; then
-	echo "Installing volumesnapshotclass CRD"
-	kubectl create -f volumesnapshotclasscrd.yaml
-fi
-
 echo helm install --values myvalues.yaml --values csi-powermax/k8s-${kMajorVersion}.${kMinorVersion}-values.yaml --namespace "$NS" powermax ./csi-powermax
 helm install --values myvalues.yaml --values csi-powermax/k8s-${kMajorVersion}.${kMinorVersion}-values.yaml --namespace "$NS" powermax ./csi-powermax
 waitOnRunning
@@ -54,5 +48,3 @@ echo "CSINode:"
 kubectl get csinodes
 echo "StorageClasses:"
 kubectl get storageclass
-echo "SnapshotClasses:"
-kubectl get volumesnapshotclass
-- 
2.17.1

