From 842a4adc6ae8d31fee88c5c7073e60fbc987fb1d Mon Sep 17 00:00:00 2001
From: coulof <florian.coulombel@dell.com>
Date: Wed, 13 May 2020 07:43:10 -0400
Subject: [PATCH 1/1] GKE 1.3 support

---
 helm/common.bash                            |  3 --
 helm/csi-powermax/k8s-1.15-values.yaml      | 19 ++++++++++
 helm/csi-powermax/templates/controller.yaml | 27 --------------
 helm/csi-powermax/templates/ds-iscsi.yaml   | 39 +++++++++++++++++++++
 helm/install.powermax                       |  5 ---
 5 files changed, 58 insertions(+), 35 deletions(-)
 create mode 100644 helm/csi-powermax/k8s-1.15-values.yaml
 create mode 100644 helm/csi-powermax/templates/ds-iscsi.yaml

diff --git a/helm/common.bash b/helm/common.bash
index f57b1e5..9ecd946 100644
--- a/helm/common.bash
+++ b/helm/common.bash
@@ -4,9 +4,6 @@
 kubectl --help >&/dev/null || {
 	 echo "kubectl required for installation... exiting"; exit 2 
 }
-kubeadm --help >&/dev/null || {
-	echo "kubeadm required for installation... exiting"; exit 2
-}
 
 waitOnRunning() {
   TARGET=$(kubectl get pods -n ${NS} | grep ${NS} | wc -l)
diff --git a/helm/csi-powermax/k8s-1.15-values.yaml b/helm/csi-powermax/k8s-1.15-values.yaml
new file mode 100644
index 0000000..331acc2
--- /dev/null
+++ b/helm/csi-powermax/k8s-1.15-values.yaml
@@ -0,0 +1,19 @@
+# IT IS RECOMMENDED YOU DO NOT CHANGE THE IMAGES TO BE DOWNLOADED.
+kubeversion: "v1.15"
+
+images:
+  # "images.attacher" defines the container images used for the csi attacher
+  # container.
+  attacher: quay.io/k8scsi/csi-attacher:v1.2.1
+
+  # "images.provisioner" defines the container images used for the csi provisioner
+  # container.
+  #provisioner: quay.io/k8scsi/csi-provisioner:v0.4.2 #for CSI 0.3.0 only (obsolete)
+  provisioner: quay.io/k8scsi/csi-provisioner:v1.2.1
+
+  # "images.snapshotter" defines the container image used for the csi snapshotter
+  snapshotter: quay.io/k8scsi/csi-snapshotter:v1.2.0
+
+  # "images.registrar" defines the container images used for the csi registrar
+  # container.
+  registrar: quay.io/k8scsi/csi-node-driver-registrar:v1.2.0
\ No newline at end of file
diff --git a/helm/csi-powermax/templates/controller.yaml b/helm/csi-powermax/templates/controller.yaml
index 076a119..75a25da 100644
--- a/helm/csi-powermax/templates/controller.yaml
+++ b/helm/csi-powermax/templates/controller.yaml
@@ -33,19 +33,6 @@ rules:
   - apiGroups: ["csi.storage.k8s.io"]
     resources: ["csinodeinfos"]
     verbs: ["get", "list", "watch"]
-# below for snapshotter
-  - apiGroups: [""]
-    resources: ["secrets"]
-    verbs: ["get", "list"]
-  - apiGroups: ["snapshot.storage.k8s.io"]
-    resources: ["volumesnapshotcontents"]
-    verbs: ["get", "list", "watch", "update", "create", "delete"]
-  - apiGroups: ["snapshot.storage.k8s.io"]
-    resources: ["volumesnapshotclasses"]
-    verbs: ["get", "list", "watch"]
-  - apiGroups: ["snapshot.storage.k8s.io"]
-    resources: ["volumesnapshots", "volumesnapshots/status"]
-    verbs: ["get", "list", "watch", "update"]
   - apiGroups: ["apiextensions.k8s.io"]
     resources: ["customresourcedefinitions"]
     verbs: ["create", "list", "watch", "delete"]
@@ -122,20 +109,6 @@ spec:
           volumeMounts:
             - name: socket-dir
               mountPath: /var/run/csi
-        - name: snapshotter
-          image: {{ required "Must provide the CSI snapshotter container image." .Values.images.snapshotter }}
-          args:
-            - "--csi-address=$(ADDRESS)"
-            - "--v=5"
-            - "--snapshot-name-prefix={{ required "Must privided a Snapshot Name Prefix" .Values.snapNamePrefix }}"
-            - "--snapshot-name-uuid-length=10"
-            - "--timeout=600s"
-          env:
-            - name: ADDRESS
-              value: /var/run/csi/csi.sock
-          volumeMounts:
-            - name: socket-dir
-              mountPath: /var/run/csi
         - name: driver
           image: {{ required "Must provide the PowerMax driver container image." .Values.images.driver }}
           imagePullPolicy: Always
diff --git a/helm/csi-powermax/templates/ds-iscsi.yaml b/helm/csi-powermax/templates/ds-iscsi.yaml
new file mode 100644
index 0000000..f0cb61d
--- /dev/null
+++ b/helm/csi-powermax/templates/ds-iscsi.yaml
@@ -0,0 +1,39 @@
+apiVersion: apps/v1
+kind: DaemonSet
+metadata:
+  name: start-iscsid
+  namespace: kube-system
+  annotations:
+    kubernetes.io/description: 'DaemonSet that starts iscsid on every nodes.'
+spec:
+  selector:
+    matchLabels:
+      name: start-iscsid
+  template:
+    metadata:
+      labels:
+        name: start-iscsid
+    spec:
+      hostNetwork: true
+      hostPID: true
+      volumes:
+      - hostPath:
+          path: /
+        name: host
+      initContainers:
+      - name: iscid-start
+        image: ubuntu
+        command: ["chroot", "/host", "systemctl", "start", "iscsid"]
+        securityContext:
+          privileged: true
+        volumeMounts:
+        - name: host
+          mountPath: /host
+        resources:
+          requests:
+            memory: "10Mi"
+            cpu: "10m"
+      containers:
+      - name: pause
+        image: gcr.io/google_containers/pause
+        imagePullPolicy: IfNotPresent
diff --git a/helm/install.powermax b/helm/install.powermax
index b0330b8..2983c8a 100644
--- a/helm/install.powermax
+++ b/helm/install.powermax
@@ -6,7 +6,6 @@ source common.bash
 echo "Running Kubernetes Server Version $kMajorVersion.$kMinorVersion"
 
 # Verify the kubernetes installation has the iscsi software, feature gates needed.
-bash verify.kubernetes
 rc=$?
 if [ $rc -ne 0 ] ; 
 	then echo "****************************************************************"
@@ -41,10 +40,6 @@ fi
 echo helm install --values myvalues.yaml --values csi-powermax/k8s-${kMajorVersion}.${kMinorVersion}-values.yaml --namespace "$NS" powermax ./csi-powermax
 helm install --values myvalues.yaml --values csi-powermax/k8s-${kMajorVersion}.${kMinorVersion}-values.yaml --namespace "$NS" powermax ./csi-powermax
 waitOnRunning
-kubectl get volumesnapshotclass | grep powermax-snapclass --quiet
-if [ $? -ne 0 ];
-    then echo "installing volumesnapshotclass"; kubectl create -f volumesnapshotclass.yaml
-fi
 echo "CSIDrivers:"
 kubectl get csidrivers
 if [ $kMinorVersion == "13" ];
-- 
2.26.2

